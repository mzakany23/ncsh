{
  "Comment": "NC Soccer Unified Workflow - Handles daily, monthly, and backfill operations",
  "StartAt": "DetermineOperationType",
  "States": {
    "DetermineOperationType": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.operation",
          "StringEquals": "daily",
          "Next": "ConfigureDailyScrape"
        },
        {
          "Variable": "$.operation",
          "StringEquals": "monthly",
          "Next": "ConfigureMonthlyScrape"
        },
        {
          "Variable": "$.operation",
          "StringEquals": "backfill",
          "Next": "ConfigureBackfill"
        }
      ],
      "Default": "HandleInvalidOperation"
    },
    
    "ConfigureDailyScrape": {
      "Type": "Pass",
      "Result": {
        "mode": "day",
        "backfill_mode": false
      },
      "ResultPath": "$.config",
      "Next": "MergeDailyParameters"
    },
    
    "MergeDailyParameters": {
      "Type": "Pass",
      "Parameters": {
        "day.$": "$.parameters.day",
        "month.$": "$.parameters.month",
        "year.$": "$.parameters.year",
        "force_scrape.$": "$.parameters.force_scrape",
        "mode.$": "$.config.mode",
        "backfill_mode.$": "$.config.backfill_mode"
      },
      "Next": "RunScraper"
    },
    
    "ConfigureMonthlyScrape": {
      "Type": "Pass",
      "Result": {
        "mode": "month",
        "backfill_mode": false
      },
      "ResultPath": "$.config",
      "Next": "MergeMonthlyParameters"
    },
    
    "MergeMonthlyParameters": {
      "Type": "Pass",
      "Parameters": {
        "month.$": "$.parameters.month",
        "year.$": "$.parameters.year",
        "force_scrape.$": "$.parameters.force_scrape",
        "mode.$": "$.config.mode",
        "backfill_mode.$": "$.config.backfill_mode"
      },
      "Next": "RunScraper"
    },
    
    "ConfigureBackfill": {
      "Type": "Pass",
      "Result": {
        "backfill_mode": true
      },
      "ResultPath": "$.config",
      "Next": "MergeBackfillParameters"
    },
    
    "MergeBackfillParameters": {
      "Type": "Pass",
      "Parameters": {
        "startDate.$": "$.parameters.startDate",
        "endDate.$": "$.parameters.endDate",
        "useNewProcessingCode.$": "$.parameters.useNewProcessingCode",
        "backfill_mode.$": "$.config.backfill_mode"
      },
      "Next": "RunBackfill"
    },
    
    "RunScraper": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "arn:aws:lambda:us-east-2:552336166511:function:ncsoccer_scraper",
        "Payload.$": "$"
      },
      "Retry": [
        {
          "ErrorEquals": ["States.ALL"],
          "IntervalSeconds": 30,
          "MaxAttempts": 3,
          "BackoffRate": 2
        }
      ],
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "ResultPath": "$.error",
          "Next": "HandleScraperError"
        }
      ],
      "ResultPath": "$.scraperResult",
      "Next": "CheckScraperResult"
    },
    
    "CheckScraperResult": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.scraperResult.statusCode",
          "NumericEquals": 200,
          "Next": "ProcessScrapedData"
        }
      ],
      "Default": "HandleScraperError"
    },
    
    "ProcessScrapedData": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "arn:aws:lambda:us-east-2:552336166511:function:ncsoccer-processing",
        "Payload": {
          "operation": "list_files",
          "src_bucket": "ncsh-app-data",
          "src_prefix": "data/json/",
          "dst_bucket": "ncsh-app-data",
          "dst_prefix": "data/parquet/"
        }
      },
      "Retry": [
        {
          "ErrorEquals": ["States.ALL"],
          "IntervalSeconds": 30,
          "MaxAttempts": 2,
          "BackoffRate": 2
        }
      ],
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "ResultPath": "$.error",
          "Next": "HandleProcessingError"
        }
      ],
      "ResultPath": "$.processingResult",
      "Next": "CheckForProcess"
    },
    
    "CheckForProcess": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.processingResult.Payload.filesProcessed",
          "NumericGreaterThan": 0,
          "Next": "BuildFinalDataset"
        }
      ],
      "Default": "WorkflowSuccess"
    },
    
    "BuildFinalDataset": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "arn:aws:lambda:us-east-2:552336166511:function:ncsoccer-processing",
        "Payload": {
          "operation": "build_dataset",
          "src_bucket": "ncsh-app-data",
          "src_prefix": "data/parquet/",
          "dst_bucket": "ncsh-app-data",
          "dst_prefix": "data/final/"
        }
      },
      "Retry": [
        {
          "ErrorEquals": ["States.ALL"],
          "IntervalSeconds": 30,
          "MaxAttempts": 2,
          "BackoffRate": 2
        }
      ],
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "ResultPath": "$.error",
          "Next": "HandleDatasetBuildError"
        }
      ],
      "ResultPath": "$.datasetResult",
      "Next": "WorkflowSuccess"
    },
    
    "RunBackfill": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "arn:aws:lambda:us-east-2:552336166511:function:ncsoccer_backfill",
        "Payload.$": "$"
      },
      "Retry": [
        {
          "ErrorEquals": ["States.ALL"],
          "IntervalSeconds": 60,
          "MaxAttempts": 2,
          "BackoffRate": 2
        }
      ],
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "ResultPath": "$.error",
          "Next": "HandleBackfillError"
        }
      ],
      "ResultPath": "$.backfillResult",
      "Next": "WaitForBackfillCompletion"
    },
    
    "WaitForBackfillCompletion": {
      "Type": "Wait",
      "Seconds": 300,
      "Next": "CheckBackfillStatus"
    },
    
    "CheckBackfillStatus": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "arn:aws:lambda:us-east-2:552336166511:function:ncsoccer-processing",
        "Payload": {
          "operation": "check_backfill_status",
          "src_bucket": "ncsh-app-data",
          "src_prefix": "data/json/"
        }
      },
      "ResultPath": "$.statusResult",
      "Next": "EvaluateBackfillStatus"
    },
    
    "EvaluateBackfillStatus": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.statusResult.Payload.status",
          "StringEquals": "COMPLETED",
          "Next": "ProcessBackfillData"
        },
        {
          "Variable": "$.statusResult.Payload.status",
          "StringEquals": "IN_PROGRESS",
          "Next": "WaitForBackfillCompletion"
        }
      ],
      "Default": "HandleBackfillError"
    },
    
    "ProcessBackfillData": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "arn:aws:lambda:us-east-2:552336166511:function:ncsoccer-processing",
        "Payload": {
          "operation": "process_all",
          "src_bucket": "ncsh-app-data",
          "src_prefix": "data/json/",
          "dst_bucket": "ncsh-app-data",
          "dst_prefix": "data/parquet/"
        }
      },
      "Retry": [
        {
          "ErrorEquals": ["States.ALL"],
          "IntervalSeconds": 60,
          "MaxAttempts": 2,
          "BackoffRate": 2
        }
      ],
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "ResultPath": "$.error",
          "Next": "HandleProcessingError"
        }
      ],
      "ResultPath": "$.processingResult",
      "Next": "BuildFinalDataset"
    },
    
    "HandleInvalidOperation": {
      "Type": "Fail",
      "Error": "InvalidOperation",
      "Cause": "The operation type specified is not valid. Must be one of: daily, monthly, backfill"
    },
    
    "HandleScraperError": {
      "Type": "Pass",
      "Result": {
        "status": "FAILED",
        "error": "Scraper operation failed",
        "source": "scraper"
      },
      "ResultPath": "$.errorInfo",
      "Next": "WorkflowFailed"
    },
    
    "HandleProcessingError": {
      "Type": "Pass",
      "Result": {
        "status": "FAILED",
        "error": "Processing operation failed",
        "source": "processor"
      },
      "ResultPath": "$.errorInfo",
      "Next": "WorkflowFailed"
    },
    
    "HandleBackfillError": {
      "Type": "Pass",
      "Result": {
        "status": "FAILED",
        "error": "Backfill operation failed",
        "source": "backfill"
      },
      "ResultPath": "$.errorInfo",
      "Next": "WorkflowFailed"
    },
    
    "HandleDatasetBuildError": {
      "Type": "Pass",
      "Result": {
        "status": "FAILED",
        "error": "Dataset build operation failed",
        "source": "dataset"
      },
      "ResultPath": "$.errorInfo",
      "Next": "WorkflowFailed"
    },
    
    "WorkflowSuccess": {
      "Type": "Succeed"
    },
    
    "WorkflowFailed": {
      "Type": "Fail",
      "Error": "WorkflowFailed",
      "Cause": "Workflow execution failed. Check CloudWatch logs for details."
    }
  }
}
