{
  "Comment": "NC Soccer Unified Workflow - Consolidated for daily and monthly operations",
  "StartAt": "DetermineOperationType",
  "States": {
    "DetermineOperationType": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.operation",
          "StringEquals": "daily",
          "Next": "ConfigureDailyMode"
        },
        {
          "Variable": "$.operation",
          "StringEquals": "monthly",
          "Next": "ConfigureMonthlyMode"
        },
        {
          "Variable": "$.operation",
          "StringEquals": "date_range",
          "Next": "ConfigureDateRangeMode"
        }
      ],
      "Default": "HandleInvalidOperation"
    },

    "ConfigureDailyMode": {
      "Type": "Pass",
      "Result": {
        "mode": "day"
      },
      "ResultPath": "$.config",
      "Next": "RunScraper"
    },

    "ConfigureMonthlyMode": {
      "Type": "Pass",
      "Result": {
        "mode": "month"
      },
      "ResultPath": "$.config",
      "Next": "RunScraper"
    },

    "ConfigureDateRangeMode": {
      "Type": "Pass",
      "Result": {
        "mode": "date_range"
      },
      "ResultPath": "$.config",
      "Next": "RunScraper"
    },

    "RunScraper": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "arn:aws:lambda:us-east-2:552336166511:function:ncsoccer_scraper",
        "Payload": {
          "mode.$": "$.config.mode",
          "parameters.$": "$.parameters"
        }
      },
      "Retry": [
        {
          "ErrorEquals": ["States.ALL"],
          "IntervalSeconds": 60,
          "MaxAttempts": 3,
          "BackoffRate": 2.0
        }
      ],
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "Next": "HandleScraperFailure"
        }
      ],
      "ResultPath": "$.execution_result",
      "Next": "ProcessFiles"
    },

    "ProcessFiles": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "arn:aws:lambda:us-east-2:552336166511:function:ncsoccer-processing",
        "Payload": {
          "operation": "process_all",
          "src_bucket": "ncsh-app-data",
          "src_prefix": "data/json/",
          "dst_bucket": "ncsh-app-data",
          "dst_prefix": "data/parquet/",
          "mode.$": "$.config.mode",
          "parameters.$": "$.parameters"
        }
      },
      "Retry": [
        {
          "ErrorEquals": ["States.ALL"],
          "IntervalSeconds": 60,
          "MaxAttempts": 3,
          "BackoffRate": 2.0
        }
      ],
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "Next": "HandleProcessingFailure"
        }
      ],
      "ResultPath": "$.processing_result",
      "Next": "WorkflowSuccess"
    },

    "HandleInvalidOperation": {
      "Type": "Fail",
      "Error": "InvalidOperation",
      "Cause": "Operation type not recognized. Use 'daily', 'monthly', or 'date_range'."
    },

    "HandleScraperFailure": {
      "Type": "Pass",
      "Result": {
        "status": "FAILED",
        "message": "Scraper execution failed. Check CloudWatch logs for details."
      },
      "Next": "WorkflowFailed"
    },

    "HandleProcessingFailure": {
      "Type": "Pass",
      "Result": {
        "status": "FAILED",
        "message": "Processing execution failed. Check CloudWatch logs for details."
      },
      "Next": "WorkflowFailed"
    },

    "WorkflowSuccess": {
      "Type": "Pass",
      "Result": {
        "status": "SUCCESS",
        "message": "Workflow completed successfully"
      },
      "End": true
    },

    "WorkflowFailed": {
      "Type": "Fail",
      "Error": "WorkflowFailed",
      "Cause": "Workflow execution failed. Check CloudWatch logs for details."
    }
  }
}