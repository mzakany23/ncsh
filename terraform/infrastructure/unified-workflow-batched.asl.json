{
  "Comment": "NC Soccer Unified Workflow - Single Mode with Batching",
  "StartAt": "ValidateInput",
  "States": {
    "ValidateInput": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "arn:aws:lambda:us-east-2:552336166511:function:ncsoccer_input_validator",
        "Payload": {
          "start_date.$": "$.start_date",
          "end_date.$": "$.end_date",
          "force_scrape.$": "$.force_scrape",
          "architecture_version.$": "$.architecture_version",
          "batch_size.$": "$.batch_size",
          "bucket_name.$": "$.bucket_name"
        }
      },
      "ResultPath": "$.validated_input",
      "Next": "CheckValidationResult"
    },

    "CheckValidationResult": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.validated_input.Payload.statusCode",
          "IsPresent": true,
          "Next": "HandleInputError"
        }
      ],
      "Default": "PlanBatches"
    },

    "HandleInputError": {
      "Type": "Fail",
      "Error": "InputValidationError",
      "Cause": "Input validation failed. Check the error details in CloudWatch logs."
    },

    "PlanBatches": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "arn:aws:lambda:us-east-2:552336166511:function:ncsoccer_batch_planner",
        "Payload": {
          "start_date.$": "$.validated_input.Payload.start_date",
          "end_date.$": "$.validated_input.Payload.end_date",
          "batch_size.$": "$.validated_input.Payload.batch_size"
        }
      },
      "ResultPath": "$.batches",
      "Next": "ProcessBatchesInParallel"
    },

    "ProcessBatchesInParallel": {
      "Type": "Map",
      "ItemsPath": "$.batches.Payload.batches",
      "MaxConcurrency": 5,
      "ResultPath": "$.batch_results",
      "Parameters": {
        "start_date.$": "$$.Map.Item.Value.start_date",
        "end_date.$": "$$.Map.Item.Value.end_date",
        "force_scrape.$": "$.validated_input.Payload.force_scrape",
        "architecture_version.$": "$.validated_input.Payload.architecture_version",
        "bucket_name.$": "$.validated_input.Payload.bucket_name"
      },
      "Iterator": {
        "StartAt": "ProcessBatch",
        "States": {
          "ProcessBatch": {
            "Type": "Task",
            "Resource": "arn:aws:states:::lambda:invoke",
            "Parameters": {
              "FunctionName": "arn:aws:lambda:us-east-2:552336166511:function:ncsoccer_scraper",
              "Payload": {
                "start_date.$": "$.start_date",
                "end_date.$": "$.end_date",
                "force_scrape.$": "$.force_scrape",
                "architecture_version.$": "$.architecture_version",
                "bucket_name.$": "$.bucket_name"
              }
            },
            "Retry": [
              {
                "ErrorEquals": ["States.ALL"],
                "IntervalSeconds": 60,
                "MaxAttempts": 3,
                "BackoffRate": 2.0
              }
            ],
            "End": true
          }
        }
      },
      "Next": "VerifyAllBatchesSucceeded"
    },

    "VerifyAllBatchesSucceeded": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "arn:aws:lambda:us-east-2:552336166511:function:ncsoccer_batch_verifier",
        "Payload": {
          "batch_results.$": "$.batch_results",
          "start_date.$": "$.validated_input.Payload.start_date",
          "end_date.$": "$.validated_input.Payload.end_date",
          "bucket_name.$": "$.validated_input.Payload.bucket_name",
          "architecture_version.$": "$.validated_input.Payload.architecture_version"
        }
      },
      "ResultPath": "$.verification",
      "Next": "CheckVerificationResult"
    },

    "CheckVerificationResult": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.verification.Payload.success",
          "BooleanEquals": true,
          "Next": "ProcessFiles"
        }
      ],
      "Default": "HandleBatchFailure"
    },

    "HandleBatchFailure": {
      "Type": "Fail",
      "Error": "BatchProcessingFailed",
      "Cause": "Failed to process some batches. Check CloudWatch logs for details."
    },

    "ProcessFiles": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "arn:aws:lambda:us-east-2:552336166511:function:ncsoccer-processing",
        "Payload": {
          "operation": "process_all",
          "src_bucket.$": "$.validated_input.Payload.bucket_name",
          "dst_bucket.$": "$.validated_input.Payload.bucket_name",
          "date_range": {
            "start_date.$": "$.validated_input.Payload.start_date",
            "end_date.$": "$.validated_input.Payload.end_date"
          },
          "architecture_version.$": "$.validated_input.Payload.architecture_version"
        }
      },
      "Retry": [
        {
          "ErrorEquals": ["States.ALL"],
          "IntervalSeconds": 60,
          "MaxAttempts": 3,
          "BackoffRate": 2.0
        }
      ],
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "Next": "HandleProcessingFailure"
        }
      ],
      "ResultPath": null,
      "Next": "WorkflowSuccess"
    },

    "HandleProcessingFailure": {
      "Type": "Pass",
      "Result": {
        "status": "FAILED",
        "message": "Processing execution failed. Check CloudWatch logs for details."
      },
      "Next": "WorkflowFailed"
    },

    "WorkflowSuccess": {
      "Type": "Pass",
      "Result": {
        "status": "SUCCESS",
        "message": "Workflow completed successfully"
      },
      "End": true
    },

    "WorkflowFailed": {
      "Type": "Fail",
      "Error": "WorkflowFailed",
      "Cause": "Workflow execution failed. Check CloudWatch logs for details."
    }
  }
}